package task1;

import org.junit.Test;

import java.awt.*;

import static org.junit.Assert.*;


/**
 * Tester class for Task 1 (task1.Pen)
 */
public class PenTest {
    @SuppressWarnings("OptionalGetWithoutIsPresent")
    @Test
    public void TestPenClass() {
        Pen pen1 = new Pen("Parker", "Premier", Color.black);
        System.out.printf("Pen 1 is a %s [hashcode: %x]\n", pen1, pen1.hashCode());

        // Check getter methods
        assertEquals(pen1.getVendor(), "Parker");
        assertEquals(pen1.getModel(), "Premier");
        assertEquals(pen1.getBodyColor(), Color.black);

        // task1.Pen is created without ink
        System.out.println("Does it have ink? " + pen1.getInkColor());
        assertFalse(pen1.getInkColor().isPresent());

        // Another pen, exactly the same
        Pen pen2 = new Pen("Parker", "Premier", Color.black);
        System.out.printf("Pen 2 is a %s [hashcode: %x]\n", pen2, pen2.hashCode());
        System.out.println("Are pens 1 and 2 equal? " + pen1.equals(pen2));
        // Check equals method (true)
        assertTrue(pen1.equals(pen2));
        assertTrue(pen2.equals(pen1));

        System.out.println("== Filling pen 1 with red ink ==");
        pen1.fillWithInk(Color.red);
        System.out.printf("Pen 1 is a %s [hashcode: %x]\n", pen1, pen1.hashCode());
        assertEquals(pen1.getInkColor().get(), Color.red);

        System.out.printf("Pen 2 is a %s [hashcode: %x]\n", pen2, pen2.hashCode());
        System.out.println("Are pens 1 and 2 still equal? " + pen1.equals(pen2));
        assertTrue(pen1.equals(pen2));

        System.out.println("And their hashcodes? " + (pen1.hashCode() == pen2.hashCode()));
        assertTrue(pen1.hashCode() == pen2.hashCode());

        Pen pen3 = new Pen("Parker", "Sonnet", Color.blue);
        System.out.printf("Another model: pen 3 is a %s\n", pen3);

        System.out.println("Are pens 1 and 3 equal? " + pen1.equals(pen3));
        // Check equals method (false)
        assertFalse(pen1.equals(pen3));
        assertFalse(pen3.equals(pen1));

        System.out.println("And their hashcodes? " + (pen1.hashCode() == pen3.hashCode()));
        assertFalse(pen1.hashCode() == pen3.hashCode());

        Pen pen4 = new Pen("Parker", "Sonnet", Color.green);
        System.out.printf("Same model, other color: pen 4 is a %s\n", pen4);
        System.out.println("Are pens 3 and 4 equal? " + pen3.equals(pen4));
        assertFalse(pen3.equals(pen4));
    }
}
