package task5;

import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Test;

import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;
import static task5.ExamMark.Type.*;

/**
 * –°–æ–∑–¥–∞–µ–º –∏ –≥—Ä—É–ø–ø–∏—Ä—É–µ–º —Å—Ç—É–¥–µ–Ω—Ç–æ–≤
 */
public class StudentsTest {
    static int testNo;

    @BeforeClass
    public static void resetCounter() {
        testNo = 0;
    }

    @Before
    public void CreateData() {
        testNo++;

        ExamPassGrades.setGrade("–§–∏–∑–∏–∫–∞", new ExamMark(INT).setMark("4"));
        ExamPassGrades.setGrade("–•–∏–º–∏—è", new ExamMark(INT).setMark("3"));
        ExamPassGrades.setGrade("–õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞", new ExamMark(LETTER).setMark("C"));

        Student st = Student.addNewStudent("–í–∞—Å—è");
        st.gradeBook.put("–§–∏–∑–∏–∫–∞", new ExamMark(INT).setMark("3"));
        st.gradeBook.put("–•–∏–º–∏—è", new ExamMark(INT).setMark("4"));
        st.gradeBook.put("–°–µ–ø—É–ª–µ–Ω–∏–µ", new ExamMark(FLOAT).setMark("99.9"));

        st = Student.addNewStudent("–ü–µ—Ç—è");
        st.gradeBook.put("–§–∏–∑–∏–∫–∞", new ExamMark(INT).setMark("5"));
        st.gradeBook.put("–•–∏–º–∏—è", new ExamMark(INT).setMark("5"));
        st.gradeBook.put("–õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞", new ExamMark(LETTER).setMark("D"));

        st = Student.addNewStudent("–ú–∞—à–∞");
        st.gradeBook.put("–§–∏–∑–∏–∫–∞", new ExamMark(INT).setMark("4"));
        st.gradeBook.put("–õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞", new ExamMark(LETTER).setMark("A"));
        st.gradeBook.put("–°–µ–ø—É–ª–µ–Ω–∏–µ", new ExamMark(FLOAT).setMark("23.7"));
    }

    @Test
    public void testMarksFail() throws Exception {
        assertFalse(Student.list().get(0).passed("–§–∏–∑–∏–∫–∞").get());
    }

    @Test
    public void testMarksPass() throws Exception {
        assertTrue(Student.list().get(1).passed("–•–∏–º–∏—è").get());
    }

    @Test
    public void testMarksDidntTake() throws Exception {
        assertFalse(Student.list().get(2).passed("–•–∏–º–∏—è").isPresent());
    }

    @Test
    public void selectByExam() throws Exception {
        String goodM, badM, resetM;
        if (testNo == 1) {
            goodM = "\u001B[32m";                  // –¶–≤–µ—Ç–æ–≤—ã–µ –æ–±–æ–∑–Ω–∞—á–µ–Ω–∏—è —Ä–∞–±–æ—Ç–∞—é—Ç —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Ç–µ—Å—Ç–∞ –ø–æ—à—Ç—É—á–Ω–æ
            badM = "\u001B[31m";
            resetM = "\u001B[30m";
        } else {
            goodM = "+  ";                         // –ü—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Ç–µ—Å—Ç–æ–≤ –±–∞—Ç–∞—Ä–µ–µ–π –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ —á/–± –æ–±–æ–∑–Ω–∞—á–µ–Ω–∏—è
            badM = "-  ";
            resetM = "";
        }

        for (String subj : ExamPassGrades.getSubjectList()) {
            System.out.println("–≠–∫–∑–∞–º–µ–Ω: " + subj + ", –ø—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª–ª: " + ExamPassGrades.getPassGrade(subj));
            for (Student stud : Student.list()) {
                if (stud.studied(subj)) {                                                   // –°—Ç—É–¥–µ–Ω—Ç —Å–¥–∞–≤–∞–ª —ç–∫–∑–∞–º–µ–Ω
                    if (stud.passed(subj).get()) System.out.print(goodM);            // –°–¥–∞–ª
                    else System.out.print(badM);                                     // –ù–µ —Å–¥–∞–ª
                    System.out.println(stud.name + " -- " + stud.gradeBook.get(subj) + resetM);
                }
            }
        }
        System.out.println("\n–î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π —ç–∫–∑–∞–º–µ–Ω...\n");
        ExamPassGrades.setGrade("–°–µ–ø—É–ª–µ–Ω–∏–µ", new ExamMark(FLOAT).setMark("50.0"));

        System.out.println("–≠–∫–∑–∞–º–µ–Ω: –°–µ–ø—É–ª–µ–Ω–∏–µ, –ø—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª–ª: " + ExamPassGrades.getPassGrade("–°–µ–ø—É–ª–µ–Ω–∏–µ"));
        Student.list().stream().filter(stud -> stud.studied("–°–µ–ø—É–ª–µ–Ω–∏–µ")).forEach(stud -> {
            if (stud.passed("–°–µ–ø—É–ª–µ–Ω–∏–µ").get()) System.out.print(goodM);
            else System.out.print(badM);
            System.out.println(stud.name + " -- " + stud.gradeBook.get("–°–µ–ø—É–ª–µ–Ω–∏–µ") + resetM);
        });
    }
}
